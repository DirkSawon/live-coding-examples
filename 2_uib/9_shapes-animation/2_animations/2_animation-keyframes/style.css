.box
{
    background: tomato;
    width: 100px;
    height: 100px;
    margin: 0 auto 25px;
    text-align: center;
    line-height: 100px;
}

.box-beispiel-1
{
    animation-name: beispiel; /* Der name unserer keyframe query */
    animation-duration: 2s; /* Die zeit, die die animation benötigt um durchzulaufen */
    animation-timing-function: linear;
}
.box-beispiel-2
{
    animation-name: beispiel;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-iteration-count: 2; /* animationsdurchläufe */
    animation-direction: reverse; /* animationsrichtung */
}
.box-beispiel-3
{
    animation-name: beispiel;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-iteration-count: 4;
    animation-direction: alternate; 
}
.box-beispiel-4
{
    animation-name: beispiel;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-iteration-count: infinite; /* unendliche animationsdurchläufe */
    animation-direction: alternate;
}
.box-beispiel-5:hover
{
    animation-name: beispiel;
    animation-duration: 2s;
    animation-timing-function: linear;
    animation-iteration-count: 4;
}
.box-beispiel-6
{
    animation-name: bewegung;
    animation-duration: 5s;
    animation-delay: -1s; /* minus werte, bedeuten, das die animation INNERHALB seines verlaufes startet */
    animation-play-state: paused; /* wir starten die animation im state "pausiert" */
}
.box-beispiel-6:hover
{
    animation-play-state: running; /* animation fortsetzen */
}

.box-shortcode
{
    /*         name     zeit      funktion         richtung     wiederholungen */
    /*         -name    -duration -timing-function -direction   -iteration-count*/
    animation: beispiel 5s        ease-in          alternate    infinite;
}

.box-beispiel-erweitert
{
    animation: erweitert 10s ease-in-out alternate infinite;
}

.box-beispiel-animista
{
    animation: flip-diagonal-2-bck 3s linear infinite alternate both;
}

/* name der keyframe animation */
@keyframes beispiel
{
    /* animiere von (0%) ... */
    from
    {
        background: tomato;
        width: 100px;
    }
    /* zu (100%) ... */
    to
    {
        background: lime;
        width: 200px;
    }
}

@keyframes bewegung
{
    from
    {
        width: 100px;
    }
    to
    {
        width: 400px;
    }
}

@keyframes erweitert
{
    0%
    {
        background: tomato;
        width: 100px;
        color: white;
        padding: 10px;
    }
    25%
    {
        background: lime;
        width: 200px;
        color: blue;
        padding: 20px;
    }
    49%
    {
        background: lime;
    }
    50%
    {
        background: cyan;
        width: 150px;
        color: red;
        padding: 30px;
    }
    70%
    {
        background: orange;
        width: 300px;
        color: black;
        padding: 20px;
    }
    93%
    {
        background: #3cafe2;
        width: 100px;
        color: red;
        padding: 10px;
        font-size: 32px;
    }
    100%
    {
        background: tomato;
        width: 150px;
        color: lime;
        padding: 0;
    }
}

/* ----------------------------------------------
 * Generated by Animista on 2023-2-9 11:30:28
 * Licensed under FreeBSD License.
 * See http://animista.net/license for more info. 
 * w: http://animista.net, t: @cssanimista
 * ---------------------------------------------- */

/**
 * ----------------------------------------
 * animation flip-diagonal-2-bck
 * ----------------------------------------
 */
 @-webkit-keyframes flip-diagonal-2-bck {
    0% {
      -webkit-transform: translateZ(0) rotate3d(-1, 1, 0, 0deg);
              transform: translateZ(0) rotate3d(-1, 1, 0, 0deg);
    }
    100% {
      -webkit-transform: translateZ(-260px) rotate3d(-1, 1, 0, -180deg);
              transform: translateZ(-260px) rotate3d(-1, 1, 0, -180deg);
    }
  }
  @keyframes flip-diagonal-2-bck {
    0% {
      -webkit-transform: translateZ(0) rotate3d(-1, 1, 0, 0deg);
              transform: translateZ(0) rotate3d(-1, 1, 0, 0deg);
    }
    100% {
      -webkit-transform: translateZ(-260px) rotate3d(-1, 1, 0, -180deg);
              transform: translateZ(-260px) rotate3d(-1, 1, 0, -180deg);
    }
  }
  